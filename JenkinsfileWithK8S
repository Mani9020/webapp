pipeline {
    agent any
    tools {
        maven 'M2_HOME'
    }
    environment {
       DOCKER_TAG = getDockerTag()
    }
    stages {
        stage('pull code form SCM') {
            steps {
                git credentialsId: 'jenkinsGitHubk8s', url: 'https://github.com/Technicalcourses2021/webapp.git'
            }
        }
        stage('mvn build') {
            steps {
                sh 'mvn clean install package'
            }
        }
       stage('Docker Build') {
            steps {
               sh "docker build . -t sudheer10thota/webapp:${DOCKER_TAG}"
            }
        }
        stage('Push Docker Image') {
            steps {
               withCredentials([string(credentialsId: 'jenkinsdockerhubk8s', variable: 'jdk8s')]) {
                   sh "docker login -u sudheer10thota -p ${jdk8s}"
                   sh "docker push sudheer10thota/webapp:${DOCKER_TAG}"
                   }
            }
        }
        stage('deploy to K8S'){
            steps {
                sh "chmod +x changeTag.sh"
                sh "./changeTag.sh ${DOCKER_TAG}"
                sshagent(['k8s']) {
                    sh "scp -o StrictHostKeyChecking=no services.yaml web-app-pod.yml ec2-user@18.234.89.181:/home/ec2-user/"
                    script{
                       try{
                        sh "ssh ec2-user@18.234.89.181 kubectl apply -f ."
                       }catch(error){
                        sh "ssh ec2-user@18.234.89.181 kubectl create -f ."                        
                       }
                    }                  
                    
                }
            
            }
        }
    }
    
}
def getDockerTag(){
   def tag = sh script: 'git rev-parse HEAD', returnStdout: true
   return tag
}
